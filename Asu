-- sequenza
alecon = {2, 3, 4, 5, 7, 9, 12, 16, 21, 32, 47, 67}
progressionIndex = 1
progressionWinned = 0

phase = 1
maxPhase = 1
phaseStart = 1
go = true

-- starting setup
div = 1000000
base = balance/div
target = balance * 1.04
SL = balance * 0.981
nextbet = alecon[progressionIndex] * base

-- chances
chance = math.random(8000,8500)/100
bigchance = math.random(7500,8500)/100
smallchance = 100 - bigchance

-- multipliers
multi = 1.10
a = alecon[progressionIndex] * base

-- counters
lossCounter = 0
winCounter = 0

-- ** RESET *********
function ResetAlecon()
    phase = 1
    maxPhase = 1
    phaseStart = 1
    chance = bigchance
    progressionIndex = 1
    base = balance/div
    SL = balance * 0.981  -- rischio 5%
    print("SL: "..SL)
  
    -- basebet = balance / 800
    sleep (math.random(10000,15000))
    resetseed ()
    
  end
-- ************

-- ** SET PHASE *******
function SetPhase(index)
    local newPhase = GetPhaseFromIndex (index)
  print(newPhase)

  if(newPhase > maxPhase) then
    maxPhase = newPhase
  end

  if(maxPhase == 3) then
    phaseStart = 2
  elseif(maxPhase == 4) then
    phaseStart = 3
  elseif(maxPhase == 5) then
    phaseStart = 4
  end

  phase = newPhase
end
-- ************


-- ** GET PHASE *******
function GetPhaseFromIndex (index)
    if(index < 7) then
      -- phase 1
      return 1

    elseif(index < 10) then
      -- phase 2
      return 2

    elseif(index < 11) then
      -- phase 3
      return 3

    elseif(index < 12) then
      -- phase 4
      return 4

    elseif(index < 13) then
      -- phase 5
      return 5
    end
end
-- ************

-- *** WIN ********
function ProcessWin ()

    -- azzero i contatori
    lossCounter = 0
    winCounter += 1

    if (go) then
        go = false
        a = alecon[progressionIndex] * base
        bigchance = math.random(7500,8500)/100
        chance = bigchance
        mukti = 1
    else
        if(alecon[progressionIndex] == 67) then
            -- Finished Progression
            progressionWinned += 1
            ResetAlecon()
        else
            if winCounter > 1 then
                progressionIndex += 1
                SetPhase(progressionIndex)
            end
        end
    end

end
-- ************

-- *** LOSS *******
function ProcessLoss ()

    -- alla prima perdita inverto alto/basso
    if  lossCounter == 0 then
        bethigh = !bethigh

        -- modifica chance
        chance = smallchance
        smallchance = 110 - bigchance
        if smallchance < 30 then
            multi = 1.43568
        end
        if smallchance >= 30 then
            multi = 1.6365
        end

        go = true
    end

    -- azzero i contatori
    lossCounter += 1
    winCounter = 0
    nextbet = previousbet*multi

    
end
-- ************

-- *** DO BET ***
function dobet () 

    print  ("fase: "..phase)
    -- condizione TP
    if balance > target or balance < SL then  --or progressionWinned > 8 then
        print ("Target archived!")
        stop ()
    end

    -- controllo risultato precedente
    -- per applicare modifiche sullo stato
    if (win) then
        ProcessWin ()
        -- imposto la prossima bet
        nextbet = alecon[progressionIndex] * base
    else 
        ProcessLoss ()
    end
    
    -- in casi specials
    if (lossCounter > 1) then
        go = true
    end 

    if (lossCounter == 1) then
        chance = smallchance
        nextbet = a*multi
        go = true
    end

    if (lossCounter == 5) then
        lossCounter = 0
        a = previousbet
        chance = bigchance
        sleep(math.random(1000,5000))
        go = false

        -- reimposto la progressione
        if (phase == 1) then
            progressionIndex = phaseStart
        elseif (phase >= 2) then
            progressionIndex -= 2
            SetPhase(progressionIndex)
        end
    end

end